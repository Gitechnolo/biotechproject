function ensureInitialData(){const history=JSON.parse(localStorage.getItem('performanceHistory')||'[]');if(history.length===0){console.log('Nessun dato trovato. Inserisco dati di esempio...');const testData=[{date:'2025-08-01',performance:90},{date:'2025-08-05',performance:92},{date:'2025-08-08',performance:94},{date:'2025-08-12',performance:96},{date:'2025-08-16',performance:98},{date:'2025-08-19',performance:99}];localStorage.setItem('performanceHistory',JSON.stringify(testData))}
cleanupOldHistory()}
function cleanupOldHistory(){const history=JSON.parse(localStorage.getItem('performanceHistory')||'[]');const thirtyDaysAgo=new Date();thirtyDaysAgo.setDate(thirtyDaysAgo.getDate()-30);const filtered=history.filter(entry=>new Date(entry.date)>=thirtyDaysAgo);if(filtered.length!==history.length){localStorage.setItem('performanceHistory',JSON.stringify(filtered))}}
async function updatePerformanceData(){const url='https://www.googleapis.com/pagespeedonline/v5/runPagespeed';const target='https://gitechnolo.github.io/biotechproject/index.html';const btn=document.getElementById('refresh-btn');if(btn){btn.disabled=!0;btn.textContent='Aggiornamento...'}
try{const mobileResponse=await fetch(`${url}?url=${encodeURIComponent(target)}&strategy=mobile`);if(!mobileResponse.ok)throw new Error(`Errore API (mobile): ${mobileResponse.status}`);const mobileData=await mobileResponse.json();const desktopResponse=await fetch(`${url}?url=${encodeURIComponent(target)}&strategy=desktop`);if(!desktopResponse.ok)throw new Error(`Errore API (desktop): ${desktopResponse.status}`);const desktopData=await desktopResponse.json();if(!mobileData.lighthouseResult?.categories){throw new Error('Dati mobile non validi')}
if(!desktopData.lighthouseResult?.categories){throw new Error('Dati desktop non validi')}
const metrics={performance:Math.round(mobileData.lighthouseResult.categories.performance.score*100),accessibility:Math.round(mobileData.lighthouseResult.categories.accessibility.score*100),'best-practices':Math.round(mobileData.lighthouseResult.categories['best-practices'].score*100),seo:Math.round(mobileData.lighthouseResult.categories.seo.score*100),'performance-desktop':Math.round(desktopData.lighthouseResult.categories.performance.score*100)};Object.keys(metrics).forEach(metric=>{const circle=document.querySelector(`.progress-circle[data-metric="${metric}"]`);if(circle){const value=metrics[metric];circle.style.setProperty('--value',value);circle.dataset.value=value}});const today=new Date().toISOString().split('T')[0];const log={date:today,performance:metrics.performance,accessibility:metrics.accessibility};const history=JSON.parse(localStorage.getItem('performanceHistory')||'[]');const existing=history.find(entry=>entry.date===today);if(!existing){history.push(log);localStorage.setItem('performanceHistory',JSON.stringify(history));console.log('Nuovo dato salvato:',log)}
drawPerformanceChart();updatePerformanceScore();const lastUpdate=document.getElementById('last-update');if(lastUpdate){const now=new Date();const options={day:'2-digit',month:'2-digit',year:'numeric',hour:'2-digit',minute:'2-digit'};lastUpdate.textContent=`Aggiornato il: ${now.toLocaleString('it-IT', options)}`}
localStorage.setItem('lastPerformanceCheck',Date.now().toString());showNotification('✅ Dati aggiornati con successo!')}catch(error){console.warn('Errore nel recupero dati da API:',error);drawPerformanceChart();updatePerformanceScore();const lastUpdate=document.getElementById('last-update');if(lastUpdate){lastUpdate.textContent='Aggiornato: dati locali (API non disponibile)'}
showNotification('⚠️ API non raggiungibile. Usati dati locali.')}finally{const btn=document.getElementById('refresh-btn');if(btn){btn.disabled=!1;btn.textContent='Aggiorna ora'}}}
function drawPerformanceChart(){const ctx=document.getElementById('performance-trend')?.getContext('2d');if(!ctx)return;ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);const history=JSON.parse(localStorage.getItem('performanceHistory')||'[]');if(history.length===0){ctx.font='14px "Sansation", sans-serif';ctx.fillStyle='#a7ffeb';ctx.textAlign='center';ctx.fillText('Dati in arrivo...',ctx.canvas.width/2,ctx.canvas.height/2);return}
const labels=history.map(entry=>entry.date);const data=history.map(entry=>entry.performance);const padding=40;const chartWidth=ctx.canvas.width-padding*2;const chartHeight=ctx.canvas.height-padding*2;const xStep=chartWidth/(Math.max(data.length-1,1));const minValue=Math.max(0,Math.min(...data)-5);const maxValue=100;const valueToY=(value)=>{const ratio=(value-minValue)/(maxValue-minValue);return padding+chartHeight-(ratio*chartHeight)};ctx.beginPath();ctx.strokeStyle='rgba(167, 255, 235, 0.2)';ctx.lineWidth=1;for(let i=0;i<=5;i++){const y=padding+(chartHeight*i/5);ctx.moveTo(padding,y);ctx.lineTo(ctx.canvas.width-padding,y)}
ctx.stroke();ctx.font='12px "Sansation", sans-serif';ctx.fillStyle='#a7ffeb';ctx.textAlign='right';for(let i=0;i<=5;i++){const value=Math.round(minValue+(maxValue-minValue)*(1-i/5));const y=padding+(chartHeight*i/5);ctx.fillText(value+'%',padding-10,y+4)}
ctx.textAlign='center';ctx.fillStyle='#a7ffeb';ctx.font='12px "Sansation", sans-serif';if(labels.length===1){ctx.fillText(labels[0],ctx.canvas.width/2,ctx.canvas.height-10)}else{const step=Math.ceil(labels.length/5);for(let i=0;i<labels.length;i+=step){const x=padding+(xStep*i);ctx.fillText(labels[i],x,ctx.canvas.height-10)}}
ctx.beginPath();ctx.moveTo(padding,valueToY(data[0]));for(let i=1;i<data.length;i++){const x=padding+(xStep*i);const y=valueToY(data[i]);ctx.lineTo(x,y)}
ctx.strokeStyle='#00e676';ctx.lineWidth=3;ctx.lineCap='round';ctx.stroke();const gradient=ctx.createLinearGradient(0,padding,0,ctx.canvas.height);gradient.addColorStop(0,'rgba(0, 230, 118, 0.3)');gradient.addColorStop(1,'rgba(0, 230, 118, 0.05)');ctx.lineTo(ctx.canvas.width-padding,ctx.canvas.height-padding);ctx.lineTo(padding,ctx.canvas.height-padding);ctx.closePath();ctx.fillStyle=gradient;ctx.fill();for(let i=0;i<data.length;i++){const x=padding+(xStep*i);const y=valueToY(data[i]);ctx.beginPath();ctx.arc(x,y,5,0,Math.PI*2);ctx.fillStyle='#a7ffeb';ctx.fill();ctx.strokeStyle='#00e676';ctx.lineWidth=2;ctx.stroke()}
const lastX=padding+(xStep*(data.length-1));const lastY=valueToY(data[data.length-1]);ctx.font='14px "Sansation", sans-serif';ctx.fillStyle='#ffffff';ctx.textAlign='center';ctx.fillText(data[data.length-1]+'%',lastX,lastY-10)}
function updatePerformanceScore(){const history=JSON.parse(localStorage.getItem('performanceHistory')||'[]');const score=history.length>0?history[history.length-1].performance:90;const scoreElement=document.getElementById('performance-score');if(scoreElement){scoreElement.textContent=Math.round(score)}}
function showNotification(message){const notification=document.createElement('div');notification.className='notification';notification.innerHTML=message;document.body.appendChild(notification);setTimeout(()=>notification.remove(),3000)}
document.addEventListener('DOMContentLoaded',()=>{ensureInitialData();drawPerformanceChart();updatePerformanceScore();const lastRun=localStorage.getItem('lastPerformanceCheck');const now=Date.now();if(!lastRun||now-parseInt(lastRun)>24*60*60*1000){updatePerformanceData();localStorage.setItem('lastPerformanceCheck',now.toString())}
const refreshBtn=document.getElementById('refresh-btn');if(refreshBtn){refreshBtn.addEventListener('click',()=>{if(refreshBtn.disabled)return;updatePerformanceData()})}})